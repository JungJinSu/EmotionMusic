library(KoNLP)
library(wordcloud)
library(Ruchardet)
library(WriteXLS) 
library(stringr)
library(xlsx)
library(data.table)
library(plyr)


useSejongDic()
useSystemDic()

# 사전에 없는 단어 추가
buildDictionary("")


setwd(directory)
getwd()

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@가사분석@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
g1 = ""

directory = "C:/Users/soldesk/Documents/KoNLP/lyrics"
g2 = readLines("161004.txt")


####################################################################
####################################################################
####################################################################





########################## 불러온 사전 파일 형태소 만들기##########################################


# 사전 엑셀파일 불러오기
dictable = read.xlsx2("dictionary.xlsx",1,stringsAsFactors=FALSE)


# 사전속 단어를 형태소로 분리
for(idx in 1:600){
  
  #사전단어 형태소분석
  tt = SimplePos22(dictable[idx,][1])
  
  #분리된 형태소 문자형 변환
  tt <-as.character(tt)
  
  # '+' 기준으로 split
  tt = strsplit(tt,"\\+")
  
  #list 만들기
  tt <-unlist(tt)
  
  # n번째 행에 입력 
  dictable[idx,][1] = tt[1]
}




# 감성반전 단어 추가 ( 단어,감정1만 추가하고 나머지는 공백)
but = data.frame("단어"     = c("지만/EC","하지만/MA"),
                 "감정1"    = c("하지만","하지만"),
                 "감정2"    = c("",""),
                 "감정3"    = c("",""),
                 "감정1점수"= c("",""),
                 "감정2점수"= c("",""))


finaldic=rbind(dictable,but)









########################################################################




#현재 경로 확인
getwd() 
#현재 경로 수정
setwd("C:/Users/soldesk/Documents/KoNLP/lyrics")

# 가사파일 위치 지정
# making directory as an object
src_dir <- c("C:/Users/soldesk/Documents/KoNLP/lyrics") # 가사 파일 경로

# listing up name of files in the directory => object
#폴더속 가사명 리스트로 담기
# ex) src_file[1] 첫번째 가사파일명
src_file <- list.files(src_dir) # list



# 가사 직접 입력
fileno1 = "날 다른 남자가 생겼다고 말하던 날 널 말리는 날 붙잡던 날 뿌리치고 돌아서는 너를 보며 어느 날 니가 다시 돌아올지도 모른다는 생각이 들었지만 난 그래도 그러면 안되지 나를 이렇게 까지 아프게 하면서 애써 떠나는 걸 보니 정말 사랑하나 했어 나는 그때 니가 돌아서던 그때 정말 너의 행복을 빌었어 근데 이제 와 이렇게 이런 모습으로 내게 나타나면 어떡해 내 맘 아프게 날 떠났으면 버렸으면 그 사람과 행복해야 하잖아 왜 이렇게 바보 같이 울고 있어 내가 가지 말랬잖아 어서 내게 돌아와 어서 여기 내 곁으로 돌아와 니가 있어야 할 곳은 여기야 다시 내게 돌아와 지금 그 남자는 너를 잘 몰라 널 이해하는 사람은 나 뿐야 Like this yall to the break of down! Do you feel me everybody come on Like this yall to the break of down! Do you feel me everybody come on (x2) 이렇게 될 줄 알았으면 보내지 않았지 아니야 알았어도 할 수 없이 보냈겠지 니가 원하는 거라면 난 다 해줬으니까 너만 행복하다면 그걸로 됐으니까 보낸거야 그래서 보낸거야 바보야 그런데 이게 뭐야 이게 다야 내가 보고 싶어했던 니 모습은 이런 게 아냐 이럴 줄 알았으면 너를 안 보냈단 말야 날 떠났으면 버렸으면 그 사람과 행복해야 하잖아 왜 이렇게 바보 같이 울고 있어 내가 가지 말랬잖아 어서 내게 돌아와 어서 여기 내 곁으로 돌아와 니가 있어야 할 곳은 여기야 다시 내게 돌아와 지금 그 남자는 너를 잘 몰라 널 이해하는 사람은 나뿐야"
#직접 입력한 가사 분석
gasa = SimplePos22(fileno1)

SimplePos22("사랑했지만 그대를 사랑했지만 그저 이렇게 멀리서 바라 볼뿐 다가 설 수없어.")
SimplePos22("하지만 없죠")




fileno = readLines(src_file[123182])

## [1]제목 [2]가수 [3]가사 [4]유튜브링크
gasa = SimplePos22(fileno[3])


#직접입력했으면 여기서부터
undata = unlist(gasa)

gasa = strsplit(as.character(undata),'\\+')

gasa = unlist(gasa)



#문자화
gasa <-as.character(gasa)

# /기준 자르기
#gasa = strsplit(gasa,"/")

#list형식
#gasa <-unlist(gasa)


sad = 0; happy = 0;rage = 0; boring = 0;surprise = 0;fear = 0;disgust = 0;interest = 0;pain = 0



###########감정점수 채점
for(i in 1:length(gasa)){
  for(all in 1:length(finaldic[,1])){
    
      #하지만 추가
    if(gasa[i] == finaldic[all,][1] ){
      
      print(finaldic[all,2][1])
      print(finaldic[all,5][1])
      print(finaldic[all,1][1])
      
      if(finaldic[all,2][1] == '슬픔'){
        sad = sad + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '기쁨'){
        happy = happy + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '분노'){
        rage = rage + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '지루함'){
        boring = boring + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '놀람'){
        surprise = surprise + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '공포'){
        fear = fear + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '혐오'){
        disgust = disgust + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '흥미'){
        interest = interest + as.double(finaldic[all,5][1])
      }else if(finaldic[all,2][1] == '고통'){
        pain = pain + as.double(finaldic[all,5][1])
      }
      
    }
    
  }
}
# 각 감정별 점수 출력
sad;happy;rage;boring;surprise;fear;disgust;interest;pain



#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


##########################################################################################



# counting number of files in the directory => object
# 파일 갯수 체크
#src_file_cnt <- length(src_file)


#------------------------------현재 사용안함---------------------
for(i in 1:5){
  data = readLines(src_file[1])
}

Sdic = read.xlsx2('dictionary.xlsx',1)

table(Sdic)

data-N = sapply(readLines(src_file[7]), extractNoun, USE.NAMES = F)
#------------------------------현재 사용안함---------------------

###############################################################################################


# 단어 출현 빈도수 체크


write(unlist(data),"new_data.txt")

# ?떒?뼱 ?뙆?씪 ?엯?젰
table_data = read.table("new_data.txt")

# ?뀒?씠釉붾쭔?뱾湲?
wordcount = table(table_data)


# wordcloud 만들기
#wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),
#         rot.per=0.25,min.freq=1,random.order=F,random.color=T,
#         colors=brewer.pal(9,"Set1"))

#?젙?젹
wordcont = sort(wordcount,decreasing = T)

# 출현빈도 상위 1000개
head(wordcont,n=1000)

# 
write.table(head(wordcont,n=1000),'data.txt')



write.table(Gsample,'gsample.xls')
